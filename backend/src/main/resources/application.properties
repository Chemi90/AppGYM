# ?????????????????????  Datasource (Railway) ?????????????????????
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# ?????????????????????  JPA / Hibernate ??????????????????????????
# Usar create solo la primera vez si necesitas recrear el esquema.
# spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# ?????????????????????  JWT  &  reCAPTCHA ????????????????????????
jwt.secret=${JWT_SECRET}
recaptcha.secret=${RECAPTCHA_SECRET}

# ?????????????????????  CORS  (Netlify front-end) ????????????????
spring.web.cors.allowed-origins=https://appgymregistro.netlify.app

# ?????????????????????  Actuator (health checks) ?????????????????
management.endpoints.web.exposure.include=health
management.endpoint.health.probes.enabled=true

# ?????????????????????  Seguridad / Spring Security ?????????????
spring.main.allow-bean-definition-overriding=false

# ?????????????????????  LOGGING  ?????????????????????????????????
# Nivel raíz del log
logging.level.root=INFO

# Subniveles habituales (súbelos o bájalos según lo necesites)
logging.level.org.springframework.security=DEBUG          # Spring-Security
logging.level.org.hibernate.SQL=DEBUG                     # SQL generado
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.web=DEBUG               # Excepciones web
logging.level.com.example.AppGYM.repository=DEBUG
logging.level.com.example.AppGYM.service=DEBUG
logging.level.com.example.AppGYM.controller.PhotoController=DEBUG
logging.level.com.example.AppGYM.service.StorageService=DEBUG

# Mostrar cabeceras y parámetros en los logs de petición
spring.mvc.log-request-details=true

# ?????????????????????  multipart (upload fotos) ?????????????????
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
