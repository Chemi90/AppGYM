/* =========================================================================
   Vista RPG ¬∑ Gamificaci√≥n b√°sica
   -------------------------------------------------------------------------
   ‚Ä¢ Muestra la ficha del h√©roe y los atributos en tiempo real.
   ‚Ä¢ No almacena nada en BD: todos los datos llegan en el objeto `state`.
   ‚Ä¢ M√°s adelante podr√°s ampliar con combates, avatares GIF, etc.
   ========================================================================= */

import { qs, create } from "../utils.js";

/**
 * Carga la pantalla RPG.
 * @param {HTMLElement} container  ‚Äì nodo del <main> donde inyectar la vista
 * @param {Object} [state]         ‚Äì datos opcionales (XP, niveles, etc.)
 */
export async function loadRpg(container, state = demoState()) {
  container.innerHTML = /*html*/`
    <section class="rpg-view fade-in">
      <h2 class="view-title">Aventura RPG</h2>

      <div class="grid gap-6 md:grid-cols-2">
        <!-- ‚îÄ‚îÄ FICHA ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ -->
        <article class="card shadow">
          <header class="card-header">
            <h3>${state.hero.name} <small class="text-muted">¬∑ Lvl ${state.hero.level}</small></h3>
          </header>

          <div class="card-body grid gap-2">
            <p><strong>Clase:</strong> ${state.hero.class}</p>
            <p><strong>Experiencia:</strong> ${state.hero.xp} / ${state.hero.xpNext} XP</p>

            <table class="w-full text-sm">
              <tbody>
                ${attrRow("Fuerza",     state.stats.str)}
                ${attrRow("Energ√≠a",    state.stats.eng)}
                ${attrRow("Vitalidad",  state.stats.vit)}
                ${attrRow("Sabidur√≠a",  state.stats.wis)}
              </tbody>
            </table>
          </div>
        </article>

        <!-- ‚îÄ‚îÄ REGISTRO DE EVENTOS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ -->
        <article class="card shadow overflow-auto" style="max-height:28rem;">
          <header class="card-header"><h3>Diario de misiones</h3></header>
          <ul id="log-box" class="log-list p-4 space-y-2 text-sm"></ul>
        </article>
      </div>
    </section>
  `;

  /* muestra √∫ltimas 15 entradas de log */
  const logBox = qs("#log-box");
  state.log.slice(-15).reverse().forEach(msg => {
    const li = create("li", "log-entry");
    li.textContent = msg;
    logBox.appendChild(li);
  });
}

/* helpers ---------------------------------------------------------------- */

function attrRow(label, value) {
  return `<tr><td class="pr-2">${label}</td><td><progress max="100" value="${value}"></progress> ${value}</td></tr>`;
}

/* demo inicial si todav√≠a no existen datos reales */
function demoState() {
  return {
    hero: {
      name   : "Athena",
      class  : "Exploradora",
      level  : 3,
      xp     : 230,
      xpNext : 400
    },
    stats: {
      str: 48,   // Fuerza
      eng: 62,   // Energ√≠a
      vit: 55,   // Vitalidad
      wis: 40    // Sabidur√≠a
    },
    log: [
      "üèãÔ∏è Hiciste 15 flexiones ‚ûú +15 Fuerza, +10 XP",
      "üçé Comiste fruta fresca ‚ûú +5 Vitalidad",
      "üí§ Dormiste 7 h 30 m ‚ûú +10 Energ√≠a",
      "‚öîÔ∏è Derrotaste al 'Monstruo de la Pereza'"
    ]
  };
}
